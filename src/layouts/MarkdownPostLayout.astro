---
import { Image } from "astro:assets";
import type { AstroSeoProps } from "@astrolib/seo";
import Comments from "@components/blog/Comments.astro";
import Title from "@components/global/Title.astro";
import { getLangFromUrl, useTranslatedPath, useTranslations } from "@i18n/utils";
import { Icon } from "astro-icon/components";
import BaseLayout from "./BaseLayout.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

type Props = {
	frontmatter: any;
	body: string;
	seo?: AstroSeoProps;
};

const { frontmatter, body, seo } = Astro.props;

function getArticleReadingTime(body: string): number {
	if (!body) return 0;
	const wordsPerMinute = 183;
	const numberOfWords = body.split(/\s/g).length;
	const minutes = numberOfWords / wordsPerMinute;
	const readTime = Math.ceil(minutes);
	return readTime;
}

const readingTime = getArticleReadingTime(body);

function formatDate(date: string | Date, lang: string): string {
	const d = new Date(date);
	if (lang === "cn") {
		return `${d.getFullYear()}年${d.getMonth() + 1}月${d.getDate()}日`;
	} else {
		return d.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });
	}
}
---

<BaseLayout seo={seo}>
	<section>
		<div class="mx-auto max-w-7xl px-8 py-12 md:px-12 lg:px-32 lg:py-32">
			<div class="flex flex-col gap-6 pt-20">
				<Title
					title={frontmatter.title}
					subtitle={lang === "cn"
						? `发表于 ${formatDate(frontmatter.pubDate, lang)}`
						: `Published on ${formatDate(frontmatter.pubDate, lang)}`}
				/>

				<p class="max-w-2xl text-base text-slate-500">
					<em>{frontmatter.description}</em>
				</p>

				{
					frontmatter?.link && (
						<a class="font-mono text-xl font-bold" href={frontmatter?.link} target="_blank">
							<Icon name="iconamoon:link-external-thin" class="inline" /> {t("blog.gotoproject")}
						</a>
					)
				}
			</div>
			<div class="mt-12 w-full justify-center">
				<Image class="mt-12 w-full rounded-lg object-cover" src={frontmatter.image.source} alt={frontmatter.image.alt} />
				<div class="flex justify-between px-2 pt-4 font-mono text-sm">
					<div class="flex flex-wrap gap-1">
						{frontmatter?.tags?.length > 0 && <span class="py-3">TAGS:</span>}
						<ul class="flex flex-wrap justify-center">
							{
								frontmatter?.tags?.map((tag: string) => (
									<li class="inline-flex items-center rounded-full px-1 py-3 font-medium uppercase tracking-widest">
										<a href={`/tags/${tag}`}>{tag}</a>
									</li>
								))
							}
						</ul>
					</div>
					<span class="py-3">~{readingTime} MIN</span>
				</div>

				<div class="prose-styles mt-12"><slot /></div>
			</div>
			<Comments />
		</div>
	</section>
</BaseLayout>
